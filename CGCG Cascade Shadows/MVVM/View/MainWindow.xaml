<Window x:Class="FR.CascadeShadows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FR.CascadeShadows"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="MainWindow" Height="1000" Width="1600">
    <Grid Background="AliceBlue">
        <!--<Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <d:Grid.DataContext>
            <local:MainViewModel/>
        </d:Grid.DataContext>
        <b:Interaction.Triggers>
            <b:EventTrigger SourceName="renderingTarget"
                            EventName="Loaded">
                <b:InvokeCommandAction 
                    Command="{Binding LoadDirectXTargetCommand}" 
                    CommandParameter="{Binding ElementName=renderingTarget}"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="outputSelect"
                            EventName="SelectionChanged">
                <b:InvokeCommandAction Command="{Binding ChangeOutputCommand}"
                                       CommandParameter="{Binding ElementName=outputSelect, Path=SelectedIndex}"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="pcfSelect"
                            EventName="SelectionChanged">
                <b:InvokeCommandAction Command="{Binding SetPcfModeCommand}"
                                       CommandParameter="{Binding ElementName=pcfSelect, Path=SelectedIndex}"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="visualiseSelect"
                            EventName="SelectionChanged">
                <b:InvokeCommandAction Command="{Binding SetVisualiseCommand}"
                                       CommandParameter="{Binding ElementName=visualiseSelect, Path=SelectedIndex}"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="cascade1Select"
                            EventName="SelectionChanged">
                <b:InvokeCommandAction Command="{Binding SetCascade1Command}"
                                       CommandParameter="{Binding ElementName=cascade1Select, Path=SelectedIndex}"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="cascade2Select"
                            EventName="SelectionChanged">
                <b:InvokeCommandAction Command="{Binding SetCascade2Command}"
                                       CommandParameter="{Binding ElementName=cascade2Select, Path=SelectedIndex}"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="cascade3Select"
                            EventName="SelectionChanged">
                <b:InvokeCommandAction Command="{Binding SetCascade3Command}"
                                       CommandParameter="{Binding ElementName=cascade3Select, Path=SelectedIndex}"/>
            </b:EventTrigger>

            <b:EventTrigger SourceName="samplerSelect"
                            EventName="SelectionChanged">
                <b:InvokeCommandAction Command="{Binding ChangeSamplerCommand}"
                                       CommandParameter="{Binding ElementName=samplerSelect, Path=Text}"/>
            </b:EventTrigger>


            <b:EventTrigger SourceName="ambientLightCb"
                            EventName="Checked">
                <b:InvokeCommandAction Command="{Binding ToggleOnCommand}"
                                       CommandParameter="ambient light"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="ambientLightCb"
                            EventName="Unchecked">
                <b:InvokeCommandAction Command="{Binding ToggleOffCommand}"
                                       CommandParameter="ambient light"/>
            </b:EventTrigger>


            <b:EventTrigger SourceName="pointLightCb"
                            EventName="Checked">
                <b:InvokeCommandAction Command="{Binding ToggleOnCommand}"
                                       CommandParameter="point light"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="pointLightCb"
                            EventName="Unchecked">
                <b:InvokeCommandAction Command="{Binding ToggleOffCommand}"
                                       CommandParameter="point light"/>
            </b:EventTrigger>

            <b:EventTrigger SourceName="directionalLightCb"
                            EventName="Checked">
                <b:InvokeCommandAction Command="{Binding ToggleOnCommand}"
                                       CommandParameter="directional light"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="directionalLightCb"
                            EventName="Unchecked">
                <b:InvokeCommandAction Command="{Binding ToggleOffCommand}"
                                       CommandParameter="directional light"/>
            </b:EventTrigger>

            <b:EventTrigger SourceName="playCb"
                            EventName="Checked">
                <b:InvokeCommandAction Command="{Binding ToggleOnCommand}"
                                       CommandParameter="play"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="playCb"
                            EventName="Unchecked">
                <b:InvokeCommandAction Command="{Binding ToggleOffCommand}"
                                       CommandParameter="play"/>
            </b:EventTrigger>

            <b:EventTrigger SourceName="texelSnapCb"
                            EventName="Checked">
                <b:InvokeCommandAction Command="{Binding ToggleOnCommand}"
                                       CommandParameter="texelSnap"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="texelSnapCb"
                            EventName="Unchecked">
                <b:InvokeCommandAction Command="{Binding ToggleOffCommand}"
                                       CommandParameter="texelSnap"/>
            </b:EventTrigger>

            <b:EventTrigger SourceName="showParallaxCb"
                            EventName="Checked">
                <b:InvokeCommandAction Command="{Binding ToggleOnCommand}"
                                       CommandParameter="parallax"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="showParallaxCb"
                            EventName="Unchecked">
                <b:InvokeCommandAction Command="{Binding ToggleOffCommand}"
                                       CommandParameter="parallax"/>
            </b:EventTrigger>

            <b:EventTrigger SourceName="blendCb"
                            EventName="Checked">
                <b:InvokeCommandAction Command="{Binding ToggleOnCommand}"
                                       CommandParameter="cascadeBlend"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="blendCb"
                            EventName="Unchecked">
                <b:InvokeCommandAction Command="{Binding ToggleOffCommand}"
                                       CommandParameter="cascadeBlend"/>
            </b:EventTrigger>

            <b:EventTrigger SourceName="depthBiasCB"
                            EventName="Checked">
                <b:InvokeCommandAction Command="{Binding ToggleOnCommand}"
                                       CommandParameter="derivative"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="depthBiasCB"
                            EventName="Unchecked">
                <b:InvokeCommandAction Command="{Binding ToggleOffCommand}"
                                       CommandParameter="derivative"/>
            </b:EventTrigger>

            <b:EventTrigger SourceName="fitToSceneCb"
                            EventName="Checked">
                <b:InvokeCommandAction Command="{Binding ToggleOnCommand}"
                                       CommandParameter="fitToScene"/>
            </b:EventTrigger>
            <b:EventTrigger SourceName="fitToSceneCb"
                            EventName="Unchecked">
                <b:InvokeCommandAction Command="{Binding ToggleOffCommand}"
                                       CommandParameter="fitToScene"/>
            </b:EventTrigger>
        </b:Interaction.Triggers>

        <!--<Label>Hi</Label>-->
        <ContentPresenter x:Name="renderingTarget"
                          MouseMove="renderingTarget_MouseMove"
                          MouseWheel="renderingTarget_MouseWheel" Grid.ColumnSpan="3" Margin="0,0,135,0"/>

        <StackPanel Orientation="Vertical" Margin="5,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">

            <ToggleButton x:Name="rotateCb" Width="50" Height="50" Checked="rotateCb_Checked">
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Style>
                </ToggleButton.Style>
                <Image Source="/Resources/Textures/rotate.png"/>
            </ToggleButton>

            <ToggleButton x:Name="zoomCb" Width="50" Height="50" Checked="zoomCb_Checked">
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Style>
                </ToggleButton.Style>
                <Image Source="/Resources/Textures/zoom.png"/>
            </ToggleButton>
        </StackPanel>

        <StackPanel Grid.Column="2"
                    Orientation="Vertical">

            <ToggleButton x:Name="playCb"
                          Content="Animate"
                          IsChecked="True"
                          VerticalAlignment="Center"
                          Margin="5,5,5,0"/>

            <Label>Show</Label>
            <ComboBox x:Name="outputSelect"
                      Margin="5,-3,5,5"
                      HorizontalAlignment="Stretch"
                      VerticalContentAlignment="Center">
                <ComboBoxItem Content="Output" IsSelected="True"/>
                <ComboBoxItem Content="GBuffer worldpos"/>
                <ComboBoxItem Content="GBuffer albedo"/>
                <ComboBoxItem Content="GBuffer normal"/>
                <ComboBoxItem Content="GBuffer emission"/>
                <ComboBoxItem Content="GBuffer specular"/>
                <ComboBoxItem Content="GBuffer gloss"/>
                <ComboBoxItem Content="Depth buffer"/>
                <ComboBoxItem Content="Light cascade 1"/>
                <ComboBoxItem Content="Light cascade 2"/>
                <ComboBoxItem Content="Light cascade 3"/>
            </ComboBox>

            <Label>Light</Label>
            <ToggleButton x:Name="ambientLightCb"
                          Content="Ambient light"
                          IsChecked="True"
                          VerticalAlignment="Center"
                          Margin="5,-5,5,0"/>

            <ToggleButton x:Name="pointLightCb"
                          Content="Point light"
                          IsChecked="True"
                          VerticalAlignment="Center"
                          Margin="5,0,5,0"/>

            <ToggleButton x:Name="directionalLightCb"
                          Content="Directional light"
                          IsChecked="True"
                          VerticalAlignment="Center"
                          Margin="5,0,5,5"/>

            <Label>Directional light shader</Label>
            <StackPanel Margin="5,-3,0,5" Orientation="Horizontal" HorizontalAlignment="Stretch">

                <Button Command="{Binding ReloadShaderCommand}"
                        CommandParameter="directional light">
                    <Image Width="35" Source="/Resources/Textures/reload.png"/>
                </Button>

                <Button Command="{Binding OpenFile}"
                        CommandParameter="Shaders\Ps\directionalLight.hlsl">
                    <Image Width="35" Source="/Resources/Textures/vscode.png"/>
                </Button>
            </StackPanel>

            <Label>Parallax shader</Label>
            <StackPanel Margin="5,-3,0,5" Orientation="Horizontal" HorizontalAlignment="Stretch">

                <Button Command="{Binding ReloadShaderCommand}"
                        CommandParameter="parallax">
                    <Image Width="35" Source="/Resources/Textures/reload.png"/>
                </Button>

                <Button Command="{Binding OpenFile}"
                        CommandParameter="Shaders\Ps\parallax.hlsl">
                    <Image Width="35" Source="/Resources/Textures/vscode.png"/>
                </Button>

                <ToggleButton x:Name="showParallaxCb"
                              IsChecked="True">
                    <Image Width="35" Source="/Resources/Textures/eye.png"/>
                </ToggleButton>

            </StackPanel>

            <Label>Shadow sampler</Label>
            <ComboBox x:Name="samplerSelect"
                      HorizontalAlignment="Stretch"
                      VerticalContentAlignment="Center"
                      Margin="5,-5,5,0">
                <ComboBoxItem Content="MinMagMipLinear" IsSelected="True"/>
                <ComboBoxItem Content="MinMagMipPoint"/>
                <ComboBoxItem Content="Anisotropic"/>
            </ComboBox>

            <Label>Shadow options</Label>
            <ToggleButton x:Name="texelSnapCb"
                          Content="Texel snapping"
                          IsChecked="True"
                          VerticalAlignment="Center"
                          Margin="5,-5,5,0"/>

            <ToggleButton x:Name="blendCb"
                          Content="Cascade blend"
                          IsChecked="True"
                          VerticalAlignment="Center"
                          Margin="5,0,5,0"/>

            <ToggleButton x:Name="depthBiasCB"
                          Content="Depth derivative"
                          IsChecked="True"
                          VerticalAlignment="Center"
                          Margin="5,0,5,0"/>


            <ToggleButton x:Name="fitToSceneCb"
                          Content="Fit-to-scene"
                          IsChecked="False"
                          VerticalAlignment="Center"
                          Margin="5,0,5,0"/>

            <Label>Shadow filtering</Label>
            <ComboBox x:Name="pcfSelect"
                      Margin="5,-3,5,0"
                      HorizontalAlignment="Stretch"
                      VerticalContentAlignment="Center">
                <ComboBoxItem Content="No filtering"/>
                <ComboBoxItem Content="4x4 average"/>
                <ComboBoxItem Content="PCF"/>
                <ComboBoxItem Content="PCF 4x4 average"/>
                <ComboBoxItem Content="PCF 3x3 gaussian" IsSelected="True"/>
            </ComboBox>

            <Label>Visualise cascaes</Label>
            <ComboBox x:Name="visualiseSelect"
                      Margin="5,-3,5,0"
                      HorizontalAlignment="Stretch"
                      VerticalContentAlignment="Center">
                <ComboBoxItem Content="None" IsSelected="True"/>
                <ComboBoxItem Content="Multiply"/>
                <ComboBoxItem Content="Override"/>
            </ComboBox>

            <Label>Cascade resolutions</Label>
            <ComboBox x:Name="cascade1Select"
                      Margin="5,-3,5,0"
                      HorizontalAlignment="Stretch"
                      VerticalContentAlignment="Center">
                <ComboBoxItem Content="128"/>
                <ComboBoxItem Content="256"/>
                <ComboBoxItem Content="512"/>
                <ComboBoxItem Content="1024"/>
                <ComboBoxItem Content="2048" IsSelected="True"/>
                <ComboBoxItem Content="4096"/>
            </ComboBox>
            <ComboBox x:Name="cascade2Select"
                      Margin="5,0,5,0"
                      HorizontalAlignment="Stretch"
                      VerticalContentAlignment="Center">
                <ComboBoxItem Content="128"/>
                <ComboBoxItem Content="256"/>
                <ComboBoxItem Content="512"/>
                <ComboBoxItem Content="1024" IsSelected="True"/>
                <ComboBoxItem Content="2048"/>
                <ComboBoxItem Content="4096"/>
            </ComboBox>
            <ComboBox x:Name="cascade3Select"
                      Margin="5,0,5,0"
                      HorizontalAlignment="Stretch"
                      VerticalContentAlignment="Center">
                <ComboBoxItem Content="128"/>
                <ComboBoxItem Content="256"/>
                <ComboBoxItem Content="512"/>
                <ComboBoxItem Content="1024"/>
                <ComboBoxItem Content="2048"/>
                <ComboBoxItem Content="4096" IsSelected="True"/>
            </ComboBox>
        </StackPanel>

        <Popup x:Name="errorPopup" IsOpen="False" Grid.ColumnSpan="3" Margin="0,0,135,0">
            <DockPanel MinWidth="600" Background="Red">
                <TextBox x:Name="errorPopupMessage" 
                         DockPanel.Dock="Top" 
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         Background="White"
                         Foreground="Black"
                         AcceptsReturn="True"
                         TextWrapping="Wrap"/>
                <Button Content="Hide" 
                        Height="30"
                        DockPanel.Dock="Bottom" 
                        VerticalAlignment="Bottom"
                        Click="Button_Click"/>
            </DockPanel>
        </Popup>
    </Grid>
</Window>
